#BlueJ class context
comment0.target=Customer
comment0.text=\n\ A\ customer\ of\ the\ storage\ location.\ \n\n\ @author\ Mary\n\ @version\ 1/06/2018\n
comment1.params=name\ phone
comment1.target=Customer(java.lang.String,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Customer\n\ \n\ @param\ \ name\ \ Name\ of\ customer.\ Must\ be\ a\ capitalized\ first\ and\ last\ name\ with\ one\ space\ between.\n\ @param\ phone\ Phone\ number\ of\ customer.\ Must\ be\ a\ ten-digit\ string.\ \n\ @throws\ IllegalArgumentException\n
comment10.params=amount
comment10.target=java.lang.Double\ charge(double)
comment10.text=\n\ Charge\ the\ customer\ a\ specied\ amount.\n\n\ @param\ \ amount\ \ the\ amount\ to\ charge,\ must\ be\ positive\n\ @return\ \ \ \ the\ new\ balance\n\ @throws\ IllegalArgumentException\n
comment11.params=amount
comment11.target=void\ checkAmount(double)
comment11.text=\n\ Throw\ an\ exception\ if\ the\ amount\ is\ not\ positive.\ \n\n\ @param\ \ amount\ \ the\ amount\ to\ check\n\ @throws\ IllegalArgumentException\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Get\ the\ string\ representation\ of\ the\ customer.\ \n\n\ @return\ \ \ \ the\ string\ representation\ of\ the\ customer\n
comment2.params=name
comment2.target=void\ checkName(java.lang.String)
comment2.text=\n\ Throw\ an\ exception\ if\ name\ does\ not\ meet\ specifications.\ \n\n\ @param\ \ name\ \ Name\ of\ customer.\ Must\ be\ a\ first\ and\ last\ name\ with\ one\ space\ between.\n\ @throws\ IllegalArgumentException\n
comment3.params=phone
comment3.target=void\ checkPhone(java.lang.String)
comment3.text=\nThrow\ an\ exception\ if\ customer\ phone\ does\ not\ meet\ specifications\n\n\ @param\ phone\ Phone\ number\ of\ customer.\ Must\ be\ a\ ten-digit\ string.\ \n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\n\ Get\ the\ customer\ name.\ \n\n\ @return\ \ \ \ the\ customer\ name\ \n
comment5.params=
comment5.target=java.lang.Double\ getBalance()
comment5.text=\n\ Get\ the\ customer's\ balance.\ \n\n\ @return\ \ \ \ the\ customer's\ balance\ \n
comment6.params=
comment6.target=java.lang.String\ getPhone()
comment6.text=\n\ Get\ the\ customer's\ phone\ number.\ \n\n\ @return\ \ \ \ the\ customer's\ phone\ number\n
comment7.params=name
comment7.target=void\ setName(java.lang.String)
comment7.text=\n\ Set\ the\ customer\ name.\ \n\n\ @param\ name\ the\ customer\ name\n\ @throws\ IllegalArgumentException\n
comment8.params=phone
comment8.target=void\ setPhone(java.lang.String)
comment8.text=\n\ Set\ the\ customer's\ phone\ number.\ \n\n\ @param\ phone\ \ the\ customer's\ phone\ number\n\ @throws\ IllegalArgumentException\n
comment9.params=amount
comment9.target=java.lang.Double\ credit(double)
comment9.text=\n\ Credit\ the\ customer\ a\ specied\ amount.\n\n\ @param\ \ amount\ \ the\ amount\ to\ credit\n\ @return\ \ \ \ the\ new\ balance\n\ @throws\ IllegalArgumentException\n
numComments=13
