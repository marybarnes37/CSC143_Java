#BlueJ class context
comment0.target=Location
comment0.text=\n\ A\ storage\ location\ with\ 106\ storage\ units\ (70\ regular\ units,\ 24\ humidity\ controlled\ units,\ and\ 12\ temperature\ controlled\ units).\n\n\ @author\ Mary\n\ @version\ 1/15/18\n\n
comment1.params=designation\ basePrice
comment1.target=Location(java.lang.String,\ double)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Location\n\ \n\ @param\ designation\ the\ designation\ ID\ for\ the\ location\n\ @throws\ IllegalArgumentException\ designation\ must\ be\ at\ least\ five\ characters\ and\ in\ the\ form\ 'WA01Seattle'\n
comment10.params=
comment10.target=void\ chargeRent()
comment10.text=\n\ Charge\ rent\ for\ all\ units\ belonging\ to\ the\ location.\ \n\n
comment11.params=
comment11.target=double[]\ getMonthlyRevenue()
comment11.text=\n\ Get\ actual\ and\ potential\ monthly\ revenue.\n\n\ @return\ \ array\ including\ actual\ revenue\ and\ possible\ revenue\n
comment12.params=
comment12.target=Unit[]\ getEmptyUnits()
comment12.text=\n\ Get\ the\ empty\ (unrented)\ units.\n\n\ @return\ \ array\ of\ empty\ units\n
comment13.params=type
comment13.target=Unit[]\ getEmptyUnits(java.lang.String)
comment13.text=\n\ Get\ the\ empty\ (unrented)\ units\ of\ a\ specified\ type.\ \ \n\n\ @param\ \ type\ \ the\ type\ of\ unit\n\ @return\ \ \ \ array\ of\ empty\ units\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ Get\ the\ string\ representation\ of\ the\ location.\ \n\n\ @return\ \ \ \ the\ string\ representation\ of\ the\ location\n
comment2.params=
comment2.target=java.lang.String\ getDesignation()
comment2.text=\n\ Get\ the\ location's\ designation.\ \n\n\ @return\ \ the\ designation\n
comment3.params=
comment3.target=double\ getBasePrice()
comment3.text=\n\ Get\ the\ location's\ base\ price.\ \n\n\ @return\ \ the\ base\ price\n
comment4.params=basePrice
comment4.target=void\ setBasePrice(double)
comment4.text=\n\ Set\ the\ location's\ base\ price.\ \n\n
comment5.params=row\ unit
comment5.target=Unit\ getUnit(int,\ int)
comment5.text=\n\ Get\ the\ unit\ at\ the\ specified\ location.\n\n\ @param\ row\ the\ row\ number\n\ @param\ unit\ the\ unit\ number\n\ @return\ \ the\ unit\ specified\n
comment6.params=index
comment6.target=Customer\ getCustomer(int)
comment6.text=\n\ Get\ the\ specified\ customer.\ \n\n\ @param\ index\ the\ index\ of\ the\ customer\n\ @return\ \ the\ specified\ customer\ of\ x\ and\ y\n
comment7.params=
comment7.target=int\ getCustCount()
comment7.text=\n\ Get\ the\ customer\ count.\ \n\n\ @return\ \ the\ customer\ count\n
comment8.params=name\ phone
comment8.target=void\ addCustomer(java.lang.String,\ java.lang.String)
comment8.text=\n\ Add\ a\ customer.\ \n\n\ @param\ name\ the\ first\ and\ last\ name\ of\ the\ customer\ in\ format\ John\ Smith\n\ @param\ phone\ the\ phone\ number\ of\ the\ customer\ in\ format\ \#\#\#\#\#\#\#\#\#\#\n\ @throws\ \ IllegalArgumentException\ customer\ name\ must\ be\ of\ forat\ "John\ Doe";\ phone\ must\ be\ of\ format\ "\#\#\#\#\#\#\#\#\#\#"\n
comment9.params=customer
comment9.target=Unit[]\ getUnitsForCustomer(Customer)
comment9.text=\n\ Get\ the\ units\ for\ the\ specified\ customer.\ \n\n\ @param\ customer\ the\ customer\ of\ interest\n\ @return\ \ the\ units\ associated\ with\ the\ specified\ customer\n
numComments=15
